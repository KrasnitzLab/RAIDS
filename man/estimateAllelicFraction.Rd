% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/processStudy.R
\encoding{UTF-8}
\name{estimateAllelicFraction}
\alias{estimateAllelicFraction}
\title{Estimate the allelic fraction of the pruned SNVs for a specific
profile}
\usage{
estimateAllelicFraction(
  gdsReference,
  gdsProfile,
  currentProfile,
  studyID,
  chrInfo,
  studyType = c("DNA", "RNA"),
  minCov = 10L,
  minProb = 0.999,
  eProb = 0.001,
  cutOffLOH = -5,
  cutOffHomoScore = -3,
  wAR = 9,
  cutOffAR = 3,
  gdsRefAnnot = NULL,
  blockID = NULL,
  verbose = FALSE
)
}
\arguments{
\item{gdsReference}{an object of class \code{\link[gdsfmt]{gds.class}}
(a GDS file), the opened 1KG GDS file.}

\item{gdsProfile}{an object of class \code{\link[gdsfmt]{gds.class}}
(a GDS file), the opened Profile GDS file.}

\item{currentProfile}{a \code{character} string corresponding to
the sample identifier as used in \code{\link{pruningSample}} function.}

\item{studyID}{a \code{character} string corresponding to the name of
the study as
used in \code{\link{pruningSample}} function.}

\item{chrInfo}{a \code{vector} of \code{integer} values representing
the length of the chromosomes. See 'details' section.}

\item{studyType}{a \code{character} string representing the type of study.
The possible choices are: "DNA" and "RNA". The type of study affects the
way the estimation of the allelic fraction is done. Default: \code{"DNA"}.}

\item{minCov}{a single positive \code{integer} representing the minimum
required coverage. Default: \code{10L}.}

\item{minProb}{a single \code{numeric} between 0 and 1 representing TODO.
Default: \code{0.999}.}

\item{eProb}{a single \code{numeric} between 0 and 1 representing the
probability of sequencing error. Default: \code{0.001}.}

\item{cutOffLOH}{a single \code{numeric} representing the cutoff, in log,
for the homozygote score to assign a region as LOH.
Default: \code{-5}.}

\item{cutOffHomoScore}{a single \code{numeric} representing the cutoff, in
log, that the SNVs in a block are called homozygote by error.
Default: \code{-3}.}

\item{wAR}{a single positive \code{integer} representing the size-1 of
the window used to compute an empty box. Default: \code{9}.}

\item{cutOffAR}{a single \code{numeric} representing the cutoff, in
log score, that the SNVs in a gene are allelic fraction different 0.5
Default: \code{3}.}

\item{gdsRefAnnot}{an object of class \code{\link[gdsfmt]{gds.class}}
(a GDS file), the1 1KG Annotation GDS file.
This parameter is RNA specific.
Default: \code{NULL}.}

\item{blockID}{a \code{character} string corresponding to the block
identifier in \code{gdsRefAnnot}. **This parameter is RNA specific.**
Default: \code{NULL}}

\item{verbose}{a \code{logicial} indicating if the function should print
message when running. Default: \code{FALSE}.}
}
\value{
The integer \code{0L} when successful.
}
\description{
The function estimates the allelic fraction of the
SNVs for a specific prfile and add the information to the associated
Profile GDS file. The allelic fraction estimation method is adapted to
the type of study (DNA or RNA).
}
\details{
The `chrInfo` parameter contains the length of the chromosomes. The
length of the chromosomes can be obtain through the
\code{\link[BSgenome]{BSgenome-class}}
library.

As example:

```

library(BSgenome.Hsapiens.UCSC.hg38)

chrInfo <- integer(25L)

for(i in seq_len(22L)){ chrInfo[i] <- length(Hsapiens[[paste0("chr", i)]])}

chrInfo[23] <- length(Hsapiens[["chrX"]])
chrInfo[24] <- length(Hsapiens[["chrY"]])
chrInfo[25] <- length(Hsapiens[["chrM"]])

```
}
\examples{

## Required library for GDS
library(gdsfmt)

## Path to the demo 1KG GDS file is located in this package
dataDir <- system.file("extdata/tests", package="RAIDS")
fileGDS <- file.path(dataDir, "ex1_good_small_1KG_GDS.gds")

## Copy the Profile GDS file demo that has been pruned and annotated
## into a test directory (deleted after the example has been run)
dataDirAllelicFraction <- file.path(system.file("extdata", package="RAIDS"),
                 "demoAllelicFraction")
dir.create(dataDirAllelicFraction, showWarnings=FALSE,
                 recursive=FALSE, mode="0777")
file.copy(file.path(dataDir, "ex1_demo_with_pruning_and_1KG_annot.gds"),
                 file.path(dataDirAllelicFraction, "ex1.gds"))

## Open the reference GDS file (demo version)
gds1KG <- snpgdsOpen(fileGDS)

## Profile GDS file for one profile
fileProfile <- file.path(dataDirAllelicFraction, "ex1.gds")
profileGDS <- openfn.gds(fileProfile, readonly=FALSE)

## Chromosome length information
## chr23 is chrX, chr24 is chrY and chrM is 25
chrInfo <- c(248956422L, 242193529L, 198295559L, 190214555L,
    181538259L, 170805979L, 159345973L, 145138636L, 138394717L, 133797422L,
    135086622L, 133275309L, 114364328L, 107043718L, 101991189L, 90338345L,
    83257441L,  80373285L,  58617616L,  64444167L,  46709983L, 50818468L,
    156040895L, 57227415L,  16569L)

## A formal way to get the chormosome length information
## library(BSgenome.Hsapiens.UCSC.hg38)
## chrInfo <- integer(25L)
## for(i in seq_len(22L)){ chrInfo[i] <-
##                          length(Hsapiens[[paste0("chr", i)]])}
## chrInfo[23] <- length(Hsapiens[["chrX"]])
## chrInfo[24] <- length(Hsapiens[["chrY"]])
## chrInfo[25] <- length(Hsapiens[["chrM"]])

## Estimate the allelic fraction of the pruned SNVs
estimateAllelicFraction(gdsReference=gds1KG, gdsProfile=profileGDS,
    currentProfile="ex1", studyID="MYDATA", chrInfo=chrInfo,
    studyType="DNA", minCov=10L, minProb=0.999, eProb=0.001,
    cutOffLOH=-5, cutOffHomoScore=-3, wAR=9, cutOffAR=3,
    gdsRefAnnot=NULL, blockID=NULL)

## The allelic fraction is saved in the 'lap' node of the Profile GDS file
## The 'lap' entry should be present
profileGDS

## Close both GDS files (important)
closefn.gds(profileGDS)
closefn.gds(gds1KG)

## Unlink Profile GDS file (created for demo purpose)
unlink(file.path(dataDirAllelicFraction, "ex1.gds"))
unlink(dataDirAllelicFraction)

}
\author{
Pascal Belleau, Astrid DeschÃªnes and Alexander Krasnitz
}
