% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gdsWrapper.R
\encoding{UTF-8}
\name{appendGDSgenotypeMat}
\alias{appendGDSgenotypeMat}
\title{Appends the genotype information for sepcific samples
(1 column == 1 sample) into a GDS file}
\usage{
appendGDSgenotypeMat(gds, matG)
}
\arguments{
\item{gds}{an object of class
\link[gdsfmt]{gds.class} (a GDS file), the opened GDS Sample file.}

\item{matG}{a \code{matrix} of \code{integer} representing the genotypes
of the SNVs for one or multiple samples. The rows correspond to SNVs and
the columns correspond to samples. The number of rows must
correspond to the number of rows of the matrix present in the
"genotype" node.}
}
\value{
The integer \code{0L} when successful.
}
\description{
This function appends the genotype information into a
GDS file. More specifically, the genotype information is added to the
"genotype" node. The "genotype" node must already be present in the
GDS file. The genotype information is a matrix with the rows corresponding
to SNVs and columns corresponding to samples.
The number of rows of the new genotype information must
correspond to the number of rows of the matrix present in the
"genotype" node.
}
\examples{

## Create a temporary GDS file in an test directory
data.dir <- system.file("extdata/tests", package="RAIDS")
gdsFilePath <- file.path(data.dir, "GDS_TEMP_06.gds")

## Create and open the GDS file
GDS_file_tmp  <- createfn.gds(filename=gdsFilePath)

## Create a "genotype" node with initial matrix
geno_initial <- matrix(rep(0L, 10), nrow=2)

add.gdsn(node=GDS_file_tmp, name="genotype", val=geno_initial)
sync.gds(GDS_file_tmp)

## New genotype information to be added
new_genotype <- matrix(rep(1L, 6), nrow=2)

## Add segments to the GDS file
RAIDS:::appendGDSgenotypeMat(gds=GDS_file_tmp, matG=new_genotype)

## Read genotype information from GDS file
## The return matrix should be a combinaison of both initial matrix
## and new matrix (column binded)
read.gdsn(index.gdsn(node=GDS_file_tmp, path="genotype"))

## Close GDS file
closefn.gds(gdsfile=GDS_file_tmp)

## Delete the temporary GDS file
unlink(x=gdsFilePath, force=TRUE)

}
\author{
Pascal Belleau, Astrid DeschÃªnes and Alexander Krasnitz
}
\keyword{internal}
